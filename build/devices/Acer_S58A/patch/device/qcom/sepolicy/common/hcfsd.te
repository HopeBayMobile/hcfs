#============= Hopebay Cloud Filesystem ==============
type hcfsd, domain, mlstrustedsubject;
type hcfsd_exec, exec_type, file_type;
type hcfs_socket, file_type;
type hcfs_data_file, file_type, data_file_type;
type terafonn_data_file, file_type, data_file_type;
#type qti_init_shell, domain;

# Domain traistion from init to hcfsd
init_daemon_domain(hcfsd)

# Allow hcfsd to have permissions on /data/hcfs_android_log and /data/testfile
allow hcfsd system_data_file:dir { write read remove_name add_name };
allow hcfsd system_data_file:file { write setattr create unlink open append };

# Allow hcfsd to have permissions on /data/data
allow hcfsd system_data_file:dir { open mounton };

# Allow HCFSvol (executed by init.rc) to mount hcfs on /data/data and /data/app
allow init fuse:filesystem { mount remount };
allow init system_data_file:dir mounton;

# Allow permission to create hcfs_socket file in /dev/shm folder
allow hcfsd device:dir rw_dir_perms;
allow hcfsd device:file rw_file_perms;
file_type_auto_trans(hcfsd, device, hcfs_socket)

# Allow connection from hcfsapid domain via socket to hcfsapid domain
allow hcfsd hcfs_socket:sock_file create_file_perms;
allow hcfsd hcfs_socket:unix_stream_socket connectto;

# Allow hcfsd to access /data/hcfs/{metastorage, blockstorage} folders
allow hcfsd hcfs_data_file:dir create_dir_perms;
allow hcfsd hcfs_data_file:file create_file_perms;

# Allow hcfsd to access /tmp
allow hcfsd tmpfs:dir create_dir_perms;
allow hcfsd tmpfs:file create_file_perms;

# From avc warning
allow hcfsd fuse_device:chr_file { read write open };
allow hcfsd hcfsd_tmpfs:file { create open getattr unlink };
allow hcfsd self:capability { sys_admin sys_resource dac_override };
#allow hcfsd system_data_file:dir { write read remove_name create open add_name mounton };
#allow hcfsd system_data_file:file { write setattr lock create unlink open append rename };
allow hcfsd apk_data_file:dir { read open mounton };

# comm="hcfs" name="/" dev="fuse" scontext=u:r:hcfsd:s0 tcontext=u:object_r:labeledfs:s0 tclass=filesystem 
allow hcfsd labeledfs:filesystem mount;

# Allow hcfs to have search permission in /proc/<pid of installd/qti/vold> folder
allow hcfsd { init installd qti_init_shell vold }:dir search;
# Allow hcfs to have read, geattr, open permissions on status file in /proc/<pid of installd/qti/vold> folder
allow hcfsd { init installd qti_init_shell vold }:file { read getattr open };
# Allow hcfs to have getattr permission on /mnt/runtime folder
allow hcfsd storage_file:dir getattr;
# Allow hcfs to have read, getattr, open, mounton permissions on /mnt/runtime/read/emulate folder
allow hcfsd storage_stub_file:dir { read getattr open mounton };

# comm="hcfs" name="runtime" dev="tmpfs" scontext=u:r:hcfsd:s0 tcontext=u:object_r:storage_file:s0 tclass=dir permissive=0
allow hcfsd storage_file:dir search;

# comm="hcfs" name="/" dev="mmcblk0p38", which mmcblk0p38 is /dev/block/bootdevice/by-name/userdata
allow hcfsd unlabeled:dir search;
# Allow hcfs to have permission on /data/data and /data/app
allow hcfsd unlabeled:dir getattr;

# Allow hcfsd to have permission on / folder
#allow hcfsd rootfs:dir { add_name write create };
# Allow hcfsd to have permission to create hcfs_android_log file
#allow hcfsd rootfs:file { create };

# Allow hcfsd to have permission on /proc/<pid of bluetooth> folder and /proc/<pid of bluetooth>/task/<pid of bluetooth>/status file 
allow hcfsd bluetooth:dir search;
allow hcfsd bluetooth:file { read open };

# Allow hcfsd to have permission on /proc/<pid of radio> folder and /proc/<pid of radio>/task/<pid of radio>/status file 
allow hcfsd radio:dir search;
allow hcfsd radio:file { read open };

# Allow hcfsd to have permission on /proc/<pid of wcnss_service> folder and /proc/<pid of wcnss_service>/task/<pid of wcnss_service>/status file 
allow hcfsd wcnss_service:dir search;
allow hcfsd wcnss_service:file { read open };

# Allow hcfsd to have permission on /proc/<pid of platform_app> folder and /proc/<pid of platform_app>/task/<pid of platform_app>/status file 
allow hcfsd platform_app:dir search;
allow hcfsd platform_app:file { read open };

# Allow hcfsd to have permission on /proc/<pid of untrusted_app> folder and /proc/<pid of untrusted_app>/task/<pid of untrusted_app>/status file 
allow hcfsd untrusted_app:dir search;
allow hcfsd untrusted_app:file { read open };

# Allow hcfsd to have permission on /proc/<pid of rild> folder and /proc/<pid of rild>/task/<pid of rild>/status file 
allow hcfsd rild:dir search;
allow hcfsd rild:file { read open };

# Allow hcfsd to have permission on /proc/<pid of system_server> folder and /proc/<pid of system_server>/task/<pid of system_server>/status file 
allow hcfsd system_server:dir search;
allow hcfsd system_server:file { read open };

# Allow hcfsd to have permission on /proc/<pid of mediaserver> folder and /proc/<pid of mediaserver>/task/<pid of mediaserver>/status file 
allow hcfsd mediaserver:dir search;
allow hcfsd mediaserver:file { read open };


#============= qti_init_shell ==============
# Allow qti_init_shell to have permissions on /dev/shm/hcfs_reporter 
allow qti_init_shell hcfs_socket:sock_file write;
allow qti_init_shell hcfsd:unix_stream_socket connectto;

# Allow qti_init_shell to have permissions on /system/bin/HCFSvol 
allow qti_init_shell hcfsd_exec:file { read execute open execute_no_trans };

# Allow init.hcfs.sh to have permission to create /tmp/hcfs_ready file
allow qti_init_shell tmpfs:dir { write add_name };
allow qti_init_shell tmpfs:file { write create open };

# Allow qti_init_shell to have permission on /system/bin/HCFSvol executable file
allow qti_init_shell hcfsd_exec:file { getattr };

# Allow qti_init_shell to have permissions on /system/xbin/su executable file
#allow qti_init_shell su_exec:file { read getattr open execute execute_no_trans };

# Allow qti_init_shell to have permission on /data/data/<pkg-name> folder
#allow qti_init_shell unlabeled:dir getattr;

# comm="chmod" name="/" dev="fuse", comm="chown" name="/" dev="fuse"
allow qti_init_shell unlabeled:dir { setattr getattr };
# comm="mkdir" name="/" dev="mmcblk0p38", comm="chown" name="/" dev="mmcblk0p38", comm="chmod" name="/" dev="mmcblk0p38"
#allow qti_init_shell unlabeled:dir { search write };
# Allow qti_init_shell to have permission to create /data/data and /data/app folder
#allow qti_init_shell unlabeled:dir { add_name create }; 

#============= sdcardd ==============
# Allow sdcardd to have permissions on /dev/shm/hcfs_reporter
allow sdcardd hcfs_socket:sock_file write;
allow sdcardd hcfsd:unix_stream_socket connectto;
# Allow sdcard to have permissions to restorecon /mnt/runtime/default/emulated, /mnt/runtime/read/emulated, /mnt/runtime/write/emulated folder 
allow sdcardd fuse:dir relabelto;
allow sdcardd shell_exec:file { read execute open execute_no_trans };
allow sdcardd storage_file:dir getattr;
allow sdcardd unlabeled:dir { relabelfrom getattr };

#============= installd ==============
# Allow installd to have permission on /data/data and /data/app folder
allow installd unlabeled:dir setattr;

#============= zygote ==============
allow zygote labeledfs:filesystem unmount;

#============= gatekeeperd ==============
# Allow gatekeeperd to read directories, files and symbolic links of the firmware_file type on /firmware folder
r_dir_file(gatekeeperd, firmware_file)

#============= vold ==============
# comm="vold" name="/" dev="fuse" scontext=u:r:vold:s0 tcontext=u:object_r:unlabeled:s0 tclass=dir 
allow vold unlabeled:dir write;

#============= untrusted_app ==============
# comm="android.vending" path="/storage/emulated" dev="fuse" scontext=u:r:untrusted_app:s0:c512,c768 tcontext=u:object_r:unlabeled:s0 tclass=dir
allow untrusted_app unlabeled:dir { read search getattr };
# Allow untrusted_app(RenderThread) to have permissions on /data/data/com.android.systemui/code_cache/com.android.opengl.shaders_cache
allow untrusted_app unlabeled:file { read write open setattr unlink };

#============= platform_app ==============
# comm="eaurora.snapcam" path="/storage/emulated" dev="fuse" scontext=u:r:platform_app:s0:c512,c768 tcontext=u:object_r:unlabeled:s0 tclass=dir 
allow platform_app unlabeled:dir getattr;
# Allow platform_app(RenderThread) to have permissions on /data/data/com.android.systemui/code_cache/com.android.opengl.shaders_cache
allow platform_app unlabeled:file { read write unlink open setattr };

#============= init ==============
#allow init socket_device:sock_file create;
#allow init system_file:file execute_no_trans;

#============= shell ==============
#comm="sh" path="/dev/ttyHSL0" dev="tmpfs" ino=11974 scontext=u:r:shell:s0 tcontext=u:object_r:device:s0 tclass=chr_file
#allow shell device:chr_file { read write };

#============= keystore ==============
#comm="keystore" name="qseecom" dev="tmpfs" ino=12052 scontext=u:r:keystore:s0 tcontext=u:object_r:device:s0 tclass=chr_file 
#allow keystore device:chr_file { read write };

#============= rild ==============
#comm="rild" name="qmux_radio" dev="tmpfs" ino=9508 scontext=u:r:rild:s0 tcontext=u:object_r:socket_device:s0 tclass=dir
#allow rild socket_device:dir write;

#============= fuse ==============
# comm="restorecon" name="/" dev="fuse" scontext=u:object_r:fuse:s0 tcontext=u:object_r:labeledfs:s0 tclass=filesystem 
allow fuse labeledfs:filesystem associate;

#============= system_app ==============
allow system_app ipa_dev:chr_file { read write open ioctl };
allow system_app self:socket { write getopt create ioctl read };
# Allow system_app to connecto and send via a local socket to the qmux domain. Also allow the system_app to remove its own socket.
qmux_socket(system_app)

#============= perfd ==============
allow perfd self:capability kill;
allow perfd system_server:process signull;
