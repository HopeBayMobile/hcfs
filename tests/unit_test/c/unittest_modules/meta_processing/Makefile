# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

HCFS_ROOT ?= $(realpath ../../../../..)
mkfile_path := $(realpath $(lastword $(MAKEFILE_LIST)))
MD_PATH := $(realpath $(dir $(mkfile_path)))
USER_DIR := $(realpath $(dir $(mkfile_path))/unittests) \
  $(realpath $(MD_PATH)) \
  $(realpath $(HCFS_ROOT)/src/HCFS) \

include $(realpath $(HCFS_ROOT)/tests/unit_test/c/unittest_modules/common.mk)

$(eval $(call ADDMODULE))

# All tests produced by this Makefile.

$(eval $(call ADDTEST, metaops_unittest, \
    metaops_mock_function.o \
    metaops.o \
    metaops_unittest.o ))

$(eval $(call ADDTEST, file_present_unittest, \
    file_present_mock_function.o \
    file_present.o \
    file_present_unittest.o ))

$(eval $(call ADDTEST, super_block_unittest, \
    super_block_mock_function.o \
    super_block.o \
    super_block_unittest.o \
    meta.o ))

$(eval $(call ADDTEST, lookup_count_unittest, \
    lookup_count_mock_function.o \
    lookup_count.o \
    lookup_count_unittest.o ))

$(eval $(call ADDTEST, pin_scheduling_unittest, \
    pin_scheduling_mock_function.o \
    pin_scheduling.o \
    pin_scheduling_unittest.o ))

$(eval $(call ADDTEST, xattr_ops_unittest, \
    xattr_ops_mock_function.o \
    xattr_ops.o \
    xattr_ops_unittest.o ))

$(eval $(call ADDTEST, rebuild_super_block_unittest, \
    rebuild_super_block_mock_function.o \
    rebuild_super_block.o \
    rebuild_super_block_unittest.o ))

RUN_TESTS := $(TESTS:%=test-%)
.PHONY : setup $(RUN_TESTS)

# finalizing the default targets
all : setup $(TESTS)

clean :
	rm -rf $(TESTS) *.gcda *.gcov $(OBJ_DIR)/*

setup :
	@$(USER_DIR)/../../utils/setup_dev_env.sh -m unit_test

test : all $(RUN_TESTS)
ifndef NOGCOVR
	gcovr -p -k -r $(USER_DIR) .
endif

$(RUN_TESTS) :
	./$(@:test-%=%) --gtest_output=xml:$(OBJ_DIR)/$(@:test-%=%).xml || \
	    ( if [ -f core ]; then { gdb -ex "set pagination 0" -ex "thread apply all bt" -batch ./$(@:test-%=%) ./core; mv core $(@:test-%=%).core; } fi; exit 1)
