#!/bin/bash
#########################################################################
#
# Copyright Â© 2015-2016 Hope Bay Technologies, Inc. All rights reserved.
#
# Abstract:
#
# Revision History
#   2016/1/18 Jethro unified usage of workspace path
#
##########################################################################
if [ "$UID" -ne 0 ]; then exec sudo -E ${BASH_SOURCE[0]}; fi
echo -e "\n======== ${BASH_SOURCE[0]} ========"
repo="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && while [ ! -d utils ] ; do cd ..; done; pwd )"
source $repo/utils/common_header.bash

if [ "$UID" -ne 0 ]; then
	echo Require root permission
	exit 1
fi
# use cache server to speed up docker building
echo 'Acquire::http::Proxy "http://cache:8000";' | tee /etc/apt/apt.conf.d/30autoproxy
export http_proxy="http://cache:8000"
sed -r -i"" "s/archive.ubuntu.com/free.nchc.org.tw/" /etc/apt/sources.list

packages+=" cmake git build-essential"	# Required by oclint / bear
packages+=" openjdk-7-jdk wget unzip"	# Required by PMD for CPD(duplicate code)
packages+=" cloc"						# Install cloc for check code of line
packages+=" mono-complete wget unzip"	# Required mono and CCM for complexity
packages+=" clang-3.5"					# clang Scan Build Reports
packages+=" colormake"					# colorful logs
packages+=" parallel"					# parallel check source code style

install_pkg

mkdir -p /ci-tools
pushd /ci-tools
# install BEAR & oclint
if [ ! -d Bear ]; then
	git clone --depth 1 https://github.com/rizsotto/Bear.git
	pushd Bear
	cmake .
	make all
	make install
	popd
fi
if [ ! -d oclint-0.8.1 ]; then
	wget http://archives.oclint.org/releases/0.8/oclint-0.8.1-x86_64-linux-3.13.0-35-generic.tar.gz
	tar -zxf oclint-0.8.1-x86_64-linux-3.13.0-35-generic.tar.gz
	rm -f oclint-0.8.1-x86_64-linux-3.13.0-35-generic.tar.gz
fi

# Install PMD for CPD(duplicate code)
if [ ! -d pmd-bin-5.2.2 ]; then
	wget http://downloads.sourceforge.net/project/pmd/pmd/5.2.2/pmd-bin-5.2.2.zip
	unzip pmd-bin-5.2.2.zip
	rm -f pmd-bin-5.2.2.zip
fi

# Install mono and CCM for complexity
if [ ! -f CCM.exe ]; then
	wget https://github.com/jonasblunck/ccm/releases/download/v1.1.7/ccm_binaries.zip
	unzip ccm_binaries.zip
	rm -f ccm_binaries.zip
fi

apt-get upgrade -y --force-yes
if [ -e /.dockerinit ]; then
	RUN_IN_SLAVE="sudo -E -u jenkins"
fi
$RUN_IN_SLAVE $repo/utils/setup_dev_env.sh -v -m docker_host
$RUN_IN_SLAVE $repo/utils/setup_dev_env.sh -v -m functional_test
$RUN_IN_SLAVE $repo/utils/setup_dev_env.sh -v -m unit_test
$RUN_IN_SLAVE $repo/utils/install_ccache.bash
apt-get clean
popd

# Remove files thail will fail tests
sudo -u jenkins fusermount -u -z /tmp/test_fuse || :
sudo rm -rf /tmp/tmpdir /tmp/testHCFS /tmp/this_met /tmp/test_fuse /tmp/FSmgr_upload /tmp/markdelete /tmp/root_meta_path /tmp/test_dir_meta /tmp/testmeta /tmp/test /tmp/testmount /tmp/tmp_meta_dir /tmp/FSmgr_upload /tmp/test1 /tmp/mock_dir_meta /tmp/mock_path /tmp/mock_meta_used_in_dir_add_entry /tmp/mock_meta_path /tmp/dir_meta_path /tmp/directory_creation /tmp/tmp_dir_meta /tmp/test_system_file /tmp/xattr_mock_meta /tmp/dir_remove_entry_meta_file /tmp/mock_symlink_meta /tmp/mock_meta /tmp/here_is_obj /tmp/this_meta /tmp/to_delete_meta /tmp/readdir_meta /tmp/tmpout /tmp/testlog || :
